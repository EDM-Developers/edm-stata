name: Run integration tests

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:

  build-linux:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v4
      with:
        path: x64
    - name: Configure CMake
      working-directory: ${{github.workspace}}/x64
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release
    - name: Build plugin
      working-directory: ${{github.workspace}}/x64
      run: cmake --build build --target edm_plugin
    - name: Install plugin
      working-directory: ${{github.workspace}}/x64
      run: cmake --build build --target install
    - name: Archive plugin
      uses: actions/upload-artifact@v4
      with:
        name: edm_Unix_x64.plugin
        path: ${{github.workspace}}/x64/bin/edm_Unix_x64.plugin
    - name: Archive ado file
      uses: actions/upload-artifact@v4
      with:
        name: edm.ado
        path: ${{github.workspace}}/x64/stata/edm.ado

  int-test-linux:
    runs-on: ubuntu-20.04
    needs: build-linux
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          path: EDM
      - name: Get the ado file for the package
        uses: actions/download-artifact@v4
        with:
          name: edm.ado
      - name: Get the compiled plugin for Linux
        uses: actions/download-artifact@v4
        with:
          name: edm_Unix_x64.plugin
      - name: Check that download worked
        run: ls
      - name: Prepare for Stata docker
        run: |
          mkdir code
          mv edm.ado code
          mv edm_Unix_x64.plugin code/edm.plugin
          mv EDM/test/ci-test.do code
          chmod 777 code
          echo '${{ secrets.STATA_LICENSE }}' > stata.lic
      - name: Try the Stata docker image
        run: |
          docker run --rm \
            -v $(pwd)/stata.lic:/usr/local/stata/stata.lic \
            -v $(pwd)/code:/code \
            dataeditors/stata17:2022-11-15 -e -q ci-test.do
      - name: Archive CI test output
        uses: actions/upload-artifact@v4
        with:
          name: ci-test.log
          path: ${{github.workspace}}/code/ci-test.log
      - name: Check test results
        run: diff -B EDM/test/ci-test.log code/ci-test.log


#  build-mac-arm:
#    runs-on: macos-11
#    steps:
#    - name: Checkout a copy to compile for ARM
#      uses: actions/checkout@v4
#      with:
#        path: arm
#    - name: Configure CMake
#      working-directory: ${{github.workspace}}/arm
#      run: ARMMODE=1 VCPKG_TARGET_TRIPLET=arm64-osx cmake -B build -DCMAKE_BUILD_TYPE=Release
#    - name: Build plugin
#      working-directory: ${{github.workspace}}/arm
#      run: cmake --build build --target edm_plugin
#    - name: Install plugin
#      working-directory: ${{github.workspace}}/arm
#      run: cmake --build build --target install
#    - name: Check binary is the right type
#      working-directory: ${{github.workspace}}/arm/test
#      run: lipo -archs ./edm.plugin
#    - name: Archive plugin
#      uses: actions/upload-artifact@v4
#      with:
#        name: edm_MacOSX_arm.plugin
#        path: ${{github.workspace}}/arm/bin/edm_MacOSX_arm.plugin
#
#  build-mac-x64:
#    runs-on: macos-11
#    steps:
#    - name: Checkout a copy to compile for x86
#      uses: actions/checkout@v4
#      with:
#        path: x64
#    - name: Configure CMake
#      working-directory: ${{github.workspace}}/x64
#      run: cmake -B build -DCMAKE_BUILD_TYPE=Release
#    - name: Build plugin
#      working-directory: ${{github.workspace}}/x64
#      run: cmake --build build --target edm_plugin
#    - name: Install plugin
#      working-directory: ${{github.workspace}}/x64
#      run: cmake --build build --target install
#    - name: Check binary is the right type
#      working-directory: ${{github.workspace}}/x64/test
#      run: lipo -archs ./edm.plugin
#    - name: Archive plugin
#      uses: actions/upload-artifact@v4
#      with:
#        name: edm_MacOSX_x64.plugin
#        path: ${{github.workspace}}/x64/bin/edm_MacOSX_x64.plugin
#
#  build-windows:
#    runs-on: windows-2019
#    steps:
#    - name: Checkout the repository
#      uses: actions/checkout@v4
#      with:
#        path: x64
#    - name: Configure CMake
#      working-directory: ${{github.workspace}}/x64
#      run: cmake -B build
#    - name: Build plugin
#      working-directory: ${{github.workspace}}/x64
#      run: cmake --build build --config Release --target edm_plugin
#    - name: Install plugin
#      working-directory: ${{github.workspace}}/x64
#      run: cmake --build build --config Release --target install
#    - name: Archive plugin
#      uses: actions/upload-artifact@v4
#      with:
#        name: edm_Windows_x64.plugin
#        path: ${{github.workspace}}/x64/bin/edm_Windows_x64.plugin

  # int-test-mac-arm:
  #   runs-on: macos
  #   needs: build-mac-arm
  #   steps:
  #   - name: Prepare integration test
  #     working-directory: ${{github.workspace}}/arm/test
  #     run: mv ci-test.log reference.log
  #   - name: Run integration test
  #     working-directory: ${{github.workspace}}/arm/test
  #     run: env /usr/bin/arch -arm64 /Applications/Stata/StataMP.app/Contents/MacOS/StataMP -e -q ci-test.do Euclidean
  #   - name: Check test results
  #     working-directory: ${{github.workspace}}/arm/test
  #     run: diff -B reference.log ci-test.log

  # unit-test-asan-mac-arm:
  #   runs-on: macos-11
  #   steps:
  #   - name: Checkout a copy to compile for ARM
  #     uses: actions/checkout@v4
  #     with:
  #       path: arm
  #   - name: Configure CMake
  #     working-directory: ${{github.workspace}}/arm
  #     run: cmake -B build -DCMAKE_BUILD_TYPE=Debug
  #   - name: Build unit tests with address sanitizer
  #     working-directory: ${{github.workspace}}/arm
  #     run: cmake --build build --target edm_test --parallel 8
  #   - name: Build CLI with address sanitizer
  #     working-directory: ${{github.workspace}}/arm
  #     run: cmake --build build --target edm_cli --parallel 8
  #   - name: Install unit tests
  #     working-directory: ${{github.workspace}}/arm
  #     run: cp build/edm_test test
  #   - name: Install CLI
  #     working-directory: ${{github.workspace}}/arm
  #     run: cp build/edm_cli test
  #   - name: Run unit tests with address sanitizer
  #     working-directory: ${{github.workspace}}/arm/test
  #     run: ./edm_test
  #   # - name: Run CLI test with address sanitizer
  #   #   working-directory: ${{github.workspace}}/arm/test
  #   #   run: ./edm_cli ci-test.json

  # int-test-mac-x64:
  #   runs-on: macos
  #   needs: build-mac-x64
  #   steps:
  #   - name: Prepare integration test
  #     working-directory: ${{github.workspace}}/x64/test
  #     run: mv ci-test.log reference.log
  #   - name: Run integration test
  #     working-directory: ${{github.workspace}}/x64/test
  #     run: env /usr/bin/arch -x86_64 /Applications/Stata/StataMP.app/Contents/MacOS/StataMP -e -q ci-test.do Euclidean
  #   - name: Check test results
  #     working-directory: ${{github.workspace}}/x64/test
  #     run: diff -B reference.log ci-test.log

  # int-test-windows:
  #   runs-on: windows
  #   needs: build-windows
  #   steps:
  #   - name: Prepare integration test
  #     working-directory: ${{github.workspace}}/x64/test
  #     run: mv ci-test.log reference.log
  #   - name: Run integration test
  #     working-directory: ${{github.workspace}}/x64/test
  #     run: cmd.exe /c "C:\Program Files\Stata17\StataMP-64.exe" -e -q ci-test.do Euclidean
  #   - name: Check test results
  #     working-directory: ${{github.workspace}}/x64/test
  #     run: cmd.exe /c "fc /W reference.log ci-test.log"
